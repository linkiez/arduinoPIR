# Sensor inteligente de detec√ß√£o e registro de movimentos
O projeto desse reposit√≥rio foi desenvolvido pelos alunos Fabio Moreno e Rosilene G Ghensev Peres para a disciplina de Objetos Inteligentes Conectados. 
Professor Wallace Rodrigues de Santana - Universidade Presbiteriana Mackenzie (UPM)

##üöÄ Introdu√ß√£o

O projeto consiste na utiliza√ß√£o de sensor infravermelho PIR, um Ardu√≠no e uma placa shield para controlar um LED, que acender√° automaticamente quando o sensor detectar uma presen√ßa e movimento. Assim como tamb√©m ir√° registrar esses movimentos em um banco de dados. 

##üõ† Pr√©-requisitos: Hardwares e Softwares utilizados
Para a montagem do circuito do projeto, foram utilizados os seguintes componentes de hardware:
- Arduino Uno;
- M√≥dulo PIR;
- Placa de ensaio;
- L√¢mpada LED;
- Placa de Wifi.

**As ferramentas que utilizamos:**
- Fios para a conex√£o.

**Os softwares utilizados foram:**
- Arduino IDE;
- Plataforma TinkerCad;

**O protocolo de rede utilizado foi:**
- MQTT
Executado atrav√©s do agente de mensagens:
- Eclipse Mosquitto

##üí° Links √∫teis:

Tutoriais √∫teis para o projeto

* [Tutorial para utilizar o Mosquitto](https://kb.elipse.com.br/aplicacao-exemplo-driver-mqtt-em-comunicacao-com-broker-mosquitto-mqtt/)
* [Tutorial do Arduino IDE](https://www.robocore.net/tutoriais/instalando-arduino-ide)
* [Tutorial para Adicionar Bibliotecas √† IDE do Arduino](https://www.robocore.net/tutoriais/adicionando-bibliotecas-na-ide-arduino)
* [Tutorial para instala√ß√£o do Node.Js](https://nodejs.org/pt-br/download/package-manager/)

##‚öô Inicializa√ß√£o do projeto

1 - Este projeto utiliza o Node.js para desenvolvimento e teste. Confirme se o mesmo est√° instalado, com o seguinte comando:

```
node --version
```

Caso n√£o tenha instalado, prossiga com a instala√ß√£o utilizando o link do tutorial dispon√≠vel na se√ß√£o "Links √∫teis"

2 - Use npm para instalar a biblioteca cliente MQTT.js 

```
# create a new project
npm init -y
```

```
# Install dependencies
npm install mqtt --save
```

O arquivo **index.js** foi criado no diret√≥rio como arquivo de entrada do projeto. Nele implementamos a l√≥gica completa do teste de conex√£o MQTT.
